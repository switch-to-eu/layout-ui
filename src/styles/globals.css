@import 'tailwindcss';

/*
 * Layout UI - Tailwind CSS Integration
 * Robust solution to prevent conflicts with consuming projects
 *
 * Strategy:
 * 1. Use CSS Layers to control cascade order
 * 2. Map all standard design tokens to layout-ui brand colors
 * 3. Use prefixed classes for layout-ui specific utilities
 * 4. Ensure proper fallbacks and compatibility
 */

/* CSS Layers - Ensuring proper cascade order */
@layer base, components, utilities, layout-ui-theme, layout-ui-utilities;

/* Theme Reference - Internal use only, not exposed to avoid conflicts */
@theme reference {
  --color-background: 0 0% 100%;
  --color-foreground: 222.2 84% 4.9%;
  --color-card: 0 0% 100%;
  --color-card-foreground: 222.2 84% 4.9%;
  --color-popover: 0 0% 100%;
  --color-popover-foreground: 222.2 84% 4.9%;
  --color-primary: 222.2 47.4% 11.2%;
  --color-primary-foreground: 210 40% 98%;
  --color-secondary: 210 40% 96%;
  --color-secondary-foreground: 222.2 84% 4.9%;
  --color-muted: 210 40% 96%;
  --color-muted-foreground: 215.4 16.3% 46.9%;
  --color-accent: 210 40% 96%;
  --color-accent-foreground: 222.2 84% 4.9%;
  --color-destructive: 0 84.2% 60.2%;
  --color-destructive-foreground: 210 40% 98%;
  --color-border: 220 13% 91%;
  --color-input: 220 13% 91%;
  --color-ring: 222.2 84% 4.9%;
  --radius: 0.5rem;

  /* Layout UI Brand Colors - Internal */
  --lui-brand-primary: 262.1 83.3% 57.8%;
  --lui-brand-secondary: 217.2 91.2% 59.8%;
  --lui-brand-tertiary: 142.1 76.2% 36.3%;
  --lui-brand-quaternary: 20.5 90.2% 48.2%;

  /* Layout UI Semantic Colors - Internal */
  --lui-success: 142.1 76.2% 36.3%;
  --lui-warning: 45.4 93.4% 47.5%;
  --lui-error: 0 84.2% 60.2%;
  --lui-error-end: 0 74.2% 40.2%;
  --lui-info: var(--lui-brand-secondary);

  /* Color Palette - Internal */
  --lui-purple-600: 262.1 83.3% 57.8%;
  --lui-purple-500: 262.1 83.3% 67.8%;
  --lui-blue-600: 217.2 91.2% 59.8%;
  --lui-blue-500: 217.2 91.2% 69.8%;
  --lui-orange-600: 20.5 90.2% 48.2%;
  --lui-orange-500: 20.5 90.2% 58.2%;
  --lui-red-600: 0 84.2% 60.2%;
  --lui-red-500: 0 84.2% 70.2%;
  --lui-green-600: 142.1 76.2% 36.3%;
  --lui-green-500: 142.1 76.2% 46.3%;
  --lui-yellow-600: 45.4 93.4% 47.5%;
  --lui-yellow-500: 45.4 93.4% 57.5%;
  --lui-pink-600: 326.8 78% 66%;
  --lui-pink-500: 326.8 78% 76%;
  --lui-gray-200: 220 13% 91%;
  --lui-gray-100: 220 14.3% 95.9%;
  --lui-gray-50: 220 14.3% 97.9%;
  --lui-white: 0 0% 100%;
}

/*
 * THEME LAYER - Maps Tailwind design tokens to Layout UI brand colors
 * This ensures seamless integration with any Tailwind CSS project
 */
@layer layout-ui-theme {
  :root {
    /* Core Tailwind Design Tokens mapped to Layout UI brand colors */
    --primary: 262.1 83.3% 57.8%;
    --primary-foreground: 0 0% 100%;
    --secondary: 217.2 91.2% 59.8%;
    --secondary-foreground: 0 0% 100%;
    --accent: 142.1 76.2% 36.3%;
    --accent-foreground: 0 0% 100%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;

    /* Standard design system tokens */
    --background: var(--color-background);
    --foreground: var(--color-foreground);
    --card: var(--color-card);
    --card-foreground: var(--color-card-foreground);
    --popover: var(--color-popover);
    --popover-foreground: var(--color-popover-foreground);
    --muted: var(--color-muted);
    --muted-foreground: var(--color-muted-foreground);
    --border: 220 13% 91%;
    --input: 220 13% 91%;
    --ring: var(--color-ring);
    --radius: var(--radius);

    /* UI Colors */
    --color-border: 220 13% 91%;
    --color-input: 220 13% 91%;

    /* Brand Color Variables - For project customization */
    --color-brand-primary: 262.1 83.3% 57.8%;
    --color-brand-secondary: 217.2 91.2% 59.8%;
    --color-brand-tertiary: 142.1 76.2% 36.3%;
    --color-brand-quaternary: 20.5 90.2% 48.2%;

    /* Semantic Color Variables - Fixed colors for universal meaning */
    --color-success: 142.1 76.2% 36.3%;
    --color-warning: 45.4 93.4% 47.5%;
    --color-error: 0 84.2% 60.2%;
    --color-error-end: 0 74.2% 40.2%;
    --color-info: 217.2 91.2% 59.8%;

    /* Gradient Variables */
    --gradient-primary-start: var(--color-brand-primary);
    --gradient-primary-end: var(--color-brand-secondary);
    --gradient-secondary-start: var(--color-warning);
    --gradient-secondary-end: var(--color-error);
    --gradient-tertiary-start: var(--color-success);
    --gradient-tertiary-end: var(--color-brand-secondary);
    --gradient-quaternary-start: var(--color-success);
    --gradient-quaternary-end: var(--color-warning);
    --gradient-quinary-start: 326.8 78% 66%;
    --gradient-quinary-end: var(--color-brand-primary);

    /* Background Gradient Variables */
    --gradient-bg-primary-start: var(--color-brand-primary);
    --gradient-bg-primary-end: var(--color-brand-secondary);
    --gradient-bg-secondary-start: 0 0% 100%;
    --gradient-bg-secondary-end: var(--color-warning);
    --gradient-bg-tertiary-start: 0 0% 100%;
    --gradient-bg-tertiary-end: var(--color-success);
    --gradient-bg-quaternary-start: 0 0% 100%;
    --gradient-bg-quaternary-end: var(--color-warning);

    /* Shadow Variables */
    --shadow-color-primary: var(--color-brand-primary);
    --shadow-color-secondary: 220 13% 91%;
  }

  /* Dark Mode Theme Support */
  .dark,
  [data-theme='dark'] {
    --primary: 262.1 83.3% 57.8%;
    --primary-foreground: 0 0% 100%;
    --secondary: 217.2 91.2% 59.8%;
    --secondary-foreground: 0 0% 100%;
    --accent: 142.1 76.2% 36.3%;
    --accent-foreground: 0 0% 100%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;

    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --border: 220 13% 91%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }
}

/*
 * BASE LAYER - Core styling that won't conflict
 */
@layer base {
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }
}

/*
 * LAYOUT UI UTILITIES LAYER - Prefixed utilities to avoid conflicts
 * These classes are guaranteed to not conflict with Tailwind
 */
@layer layout-ui-utilities {
  /* Layout UI Text Utilities */
  .text-white {
    color: hsl(0 0% 100%);
  }

  .text-primary {
    color: hsl(var(--color-brand-primary));
  }

  /* Layout UI Background Utilities */
  .bg-primary {
    background-color: hsl(var(--color-brand-primary));
  }

  .bg-secondary {
    background-color: hsl(var(--color-brand-secondary));
  }

  .bg-tertiary {
    background-color: hsl(var(--color-brand-tertiary));
  }

  .bg-quaternary {
    background-color: hsl(var(--color-brand-quaternary));
  }

  .bg-success {
    background-color: hsl(var(--color-success));
  }

  .bg-warning {
    background-color: hsl(var(--color-warning));
  }

  .bg-error {
    background-color: hsl(var(--color-error));
  }

  .bg-destructive {
    background-color: hsl(var(--color-error));
  }

  .bg-background {
    background-color: hsl(var(--background));
  }

  .bg-foreground {
    background-color: hsl(var(--foreground));
  }

  /* Layout UI Gradient Utilities */
  .gradient-primary {
    background: linear-gradient(
      to right,
      hsl(var(--gradient-primary-start)),
      hsl(var(--gradient-primary-end))
    );
  }

  .gradient-secondary {
    background: linear-gradient(
      to right,
      hsl(var(--gradient-secondary-start)),
      hsl(var(--gradient-secondary-end))
    );
  }

  .gradient-tertiary {
    background: linear-gradient(
      to right,
      hsl(var(--gradient-tertiary-start)),
      hsl(var(--gradient-tertiary-end))
    );
  }

  .gradient-quaternary {
    background: linear-gradient(
      to right,
      hsl(var(--gradient-quaternary-start)),
      hsl(var(--gradient-quaternary-end))
    );
  }

  .gradient-quinary {
    background: linear-gradient(
      to right,
      hsl(var(--gradient-quinary-start)),
      hsl(var(--gradient-quinary-end))
    );
  }

  .gradient-success {
    background: linear-gradient(
      to right,
      hsl(var(--color-success)),
      hsl(var(--color-success))
    );
  }

  .gradient-warning {
    background: linear-gradient(
      to right,
      hsl(var(--color-warning)),
      hsl(var(--color-warning))
    );
  }

  .gradient-error {
    background: linear-gradient(
      to right,
      hsl(var(--color-error)),
      hsl(var(--color-error-end))
    );
  }

  /* Layout UI Background Gradient Utilities */
  .gradient-bg-primary {
    background: linear-gradient(
      to bottom right,
      hsl(var(--gradient-bg-primary-start) / 0.1),
      hsl(var(--gradient-bg-primary-end) / 0.1)
    );
  }

  .gradient-bg-secondary {
    background: linear-gradient(
      to bottom right,
      hsl(var(--gradient-bg-secondary-start)),
      hsl(var(--gradient-bg-secondary-end) / 0.1)
    );
  }

  .gradient-bg-tertiary {
    background: linear-gradient(
      to bottom right,
      hsl(var(--gradient-bg-tertiary-start)),
      hsl(var(--gradient-bg-tertiary-end) / 0.1)
    );
  }

  .gradient-bg-quaternary {
    background: linear-gradient(
      to bottom right,
      hsl(var(--gradient-bg-quaternary-start)),
      hsl(var(--gradient-bg-quaternary-end) / 0.1)
    );
  }

  .gradient-bg-destructive {
    background: linear-gradient(
      to bottom right,
      hsl(var(--color-error) / 0.2),
      hsl(var(--color-error-end) / 0.05)
    );
  }

  .gradient-bg-success {
    background: linear-gradient(
      to bottom right,
      hsl(var(--color-success) / 0.2),
      hsl(var(--color-success) / 0.05)
    );
  }

  /* Layout UI Border Utilities */
  .border-primary {
    border-color: hsl(var(--color-border));
  }

  .border-secondary {
    border-color: hsl(var(--color-brand-secondary));
  }

  .border-input {
    border-color: hsl(var(--border));
  }

  /* Layout UI Shadow Utilities */
  .shadow-card {
    box-shadow: 0 10px 15px -3px hsl(var(--shadow-color-primary) / 0.1),
      0 4px 6px -4px hsl(var(--shadow-color-primary) / 0.1);
  }

  .shadow-card-hover {
    box-shadow: 0 20px 25px -5px hsl(var(--shadow-color-primary) /
            0.15),
      0 8px 10px -6px hsl(var(--shadow-color-primary) / 0.1);
  }

  .shadow-xs {
    box-shadow: 0 1px 2px 0 hsl(220 13% 91% / 0.5);
  }

  /* Container Queries Support */
  @supports (container-type: inline-size) {
    .\@container\/card-header {
      container-type: inline-size;
      container-name: card-header;
    }
  }
}

/*
  ==========================================
  PROJECT CUSTOMIZATION GUIDE
  ==========================================

  To customize Layout UI colors in your project, override these CSS variables in your own CSS:

  --color-brand-primary: your-custom-hsl-value;
  --color-brand-secondary: your-custom-hsl-value;
  --color-brand-tertiary: your-custom-hsl-value;
  --color-brand-quaternary: your-custom-hsl-value;

  The standard Tailwind design tokens (--primary, --secondary, etc.) will automatically
  inherit these brand colors, eliminating any conflicts.

  ==========================================
  MIGRATION GUIDE
  ==========================================

  If you were using old Layout UI classes, update them as follows:

  .text-primary -> Use Tailwind's .text-primary (now uses brand colors) OR .lui-text-brand-primary
  .bg-primary -> Use Tailwind's .bg-primary (now uses brand colors) OR .lui-bg-brand-primary
  .bg-secondary -> Use Tailwind's .bg-secondary (now uses brand colors) OR .lui-bg-brand-secondary
  .gradient-primary -> .lui-gradient-primary
  .shadow-card -> .lui-shadow-card

  All standard Tailwind classes now automatically use your Layout UI brand colors without conflicts!
*/
